name: Deploy Application

on:
  push:
    branches:
      - develop
      - master

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Get latest tag
        id: latest_tag
        run: |
          VERSION_PREFIX="v"
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "$VERSION_PREFIX0.0.0")
          echo "::set-output name=tag::$LATEST_TAG"

      - name: Calculate new tag and push
        id: extract_version
        run: |
          VERSION="${{ steps.latest_tag.outputs.tag }}"
          MAJOR=$(echo "$VERSION" | cut -d. -f1 | sed 's/v//')
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          PATCH=$(echo "$VERSION" | cut -d. -f3)
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            MINOR=$((MINOR + 1))
          elif [ "${{ github.ref }}" = "refs/heads/master" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
          fi
          NEW_VERSION="${VERSION_PREFIX}${MAJOR}.${MINOR}.${PATCH}"
          echo "$NEW_VERSION"
          git tag "$NEW_VERSION"
          git push origin "$NEW_VERSION"
  deploy-test:
    runs-on: ubuntu-latest  # Puedes cambiar esto según tus necesidades, por ejemplo, "windows-latest" o "macos-latest"
    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Conexión SSH a instancia EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}  # Debes configurar este secreto en la configuración de tu repositorio
          username: ${{ secrets.EC2_USER }}  # Debes configurar este secreto en la configuración de tu repositorio
          key: ${{ secrets.EC2_SSH_KEY }}  # Debes configurar este secreto en la configuración de tu repositorio
          script: |
            echo "Hello World desde GitHub Actions en EC2"
            pwd
            whoami


